openapi: "3.0.1"
info: 
  title: "API MOSAIQUAGE"
  description: "Documentation de l'API pour le controle et les retouches de mosaiquage."
servers: 
  - url: "http://localhost:8081"
    description: "Serveur de dev"
tags:
  - name: cache
    description: Gestion des caches
  - name: branch
    description: Gestion des branches
  - name: wmts
    description: Requête sur les tuiles
  - name: graph
    description: Requête sur le graph de mosaïquage
  - name: patch
    description: Gestion des patches
  - name: vector
    description: Gestion des couches vecteurs annexes
  - name: file
    description: Récupération de fichiers
  - name: process
    description: Gestion des processus longs (donc asynchrones)
paths:
# VERSION
  '/version':
    get:
      tags:
        - version
      summary: "Version git"
      description: ""
      responses:
        '200':
          description: OK

# CACHE
  '/caches':
    get:
      tags:
        - cache
      summary: "Récupération de la liste des caches"
      description: ""
      responses:
        '200':
          description: OK

  '/cache':
    post:
      tags:
        - cache
      summary: "Import d'un cache à partir d'un overviews.json"
      description: ""
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
          example: "monCache"
        - in: query
          name: path
          required: true
          schema:
            type: string
          example: "/mon_cache"
      requestBody:
        description: overviews.json
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  identifier:
                    type: string
                    example: "LAMB93_5cm"
                  crs:
                    type: object
                    properties:
                      type:
                        type: string
                        example: "EPSG"
                      code:
                        type: integer
                        example: 2154
                      boundingBox:
                        type: object
                        example:
                          {
                            "xmin": 0,
                            "xmax": 1200000,
                            "ymin": 6090000,
                            "ymax": 7200000}
                      proj4Definition:
                        type: string
                        example: "+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs"
                  resolution:
                    type: integer
                    example: 0.05
                  level:
                    type: object
                    example:
                      {
                        "min": 14,
                        "max": 21}
                  tileSize:
                    type: object
                    example:
                      {
                        "width": 256,
                        "height": 256}
                  pathDepth:
                    type: integer
                    example: 4
                  slabSize:
                    type: object
                    example:
                      {
                        "width": 16,
                        "height": 16}
                  list_OPI:
                    type: object
                    example:
                      {
                        "19FD5606Ax00020_16371": {
                          "color": [
                              126,
                              222,
                              76],
                          "with_rgb": true,
                          "with_ir": false}}
                  dataSet:
                    type: object
                    properties:
                      boundingBox:
                        type: object
                        example:
                          {
                            "LowerCorner": [
                                230745.6,
                                6759641.6],
                            "UpperCorner": [
                                230758.4,
                                6759654.4]}
                      limits:
                        type: object
      responses:
        '200':
          description: OK

    delete:
      tags:
        - cache
      summary: "Destruction d'un cache"
      description: ""
      parameters:
        - in: query
          name: idCache
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK

# BRANCH
  '/branches':
    get:
      tags:
        - branch
      summary: "Récupération de la liste des branches"
      description: ""
      parameters:
        - in: query
          name: idCache
          required: false
          schema:
            type: integer
          example: 0
      responses:
        '200':
          description: OK

  '/branch':
    post:
      tags:
        - branch
      summary: "Création d'une branche"
      description: ""
      parameters:
        - in: query
          name: name
          required: true
          schema:
            type: string
          example: "maBranche"
        - in: query
          name: idCache
          required: true
          schema:
            type: integer
          example: 0
      responses:
        '200':
          description: OK

    delete:
      tags:
        - branch
      summary: "Destruction d'une branche"
      description: ""
      parameters:
        - in: query
          name: idBranch
          required: true
          schema:
            type: integer
          example: 1
      responses:
        '200':
          description: OK
  
  '/{idBranch}/rebase':
    post:
      tags:
        - branch
      summary: "Création d'une nouvelle branche en appliquant les patchs de cette branche sur une autre branche"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
        - in: query
          name: name
          required: true
          schema:
            type: string
          example: "maNouvelleBranche"
        - in: query
          name: idBase
          description: l'identifiant de la branche à utiliser comme base
          required: true
          schema:
            type: integer
          example: 0
      responses:
        '200':
          description: OK

# GRAPH
  '/{idBranch}/graph':
    get:
      tags:
        - graph
      summary: "Récupération de l'identifiant du cliché"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
        - in: query
          name: x
          required: true
          schema:
            type: string
          example: 230975.8
        - in: query
          name: y
          required: true
          schema:
            type: string
          example: 6759518.1
      responses:
        '200':
          description: OK
          
# PATCH
  '/{idBranch}/patches':
    get:
      tags:
        - patch
      summary: "Récupération de tous les patchs de correction"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  '/{idBranch}/patch':
    post:
      tags:
        - patch
      summary: "Application d'un patch de correction"
      description: "Mise a jour du graph de mosaiquage a partir d'un geoJSON"
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      requestBody:
        description: polygone à patcher (geoJson)
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                      - FeatureCollection
                  crs:
                    type: object
                    example:
                      {
                        "type":"name",
                        "properties":{
                          "name":"urn:ogc:def:crs:EPSG::2154"}}

                  features:
                    type: object
                    example:
                      [ { type: 'Feature', properties: { color: [254, 175, 143], cliche: '19FD5606Ax00020_16371' }, geometry: { type: 'Polygon', coordinates: [[[230748, 6759653], [230746, 6759653], [230746, 6759651], [230748, 6759651], [230748, 6759653]]] } } ]

      responses:
        '200':
          description: OK

  '/{idBranch}/patch/undo':
    put:
      tags:
        - patch
      summary: "Annulation de la dernière modification"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  '/{idBranch}/patch/redo':
    put:
      tags:
        - patch
      summary: "Reprise en compte de la dernière modification annulée"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  '/{idBranch}/patches/clear':
    put:
      tags:
        - patch
      summary: "Annulation de toutes les modifications"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

# VECTOR
  '/{idBranch}/vectors':
    get:
      tags:
        - vector
      summary: "Récupération des métadonnées de tous les vecteurs annexes d'une branche"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  '/{idBranch}/vector':
    get:
      tags:
        - vector
      summary: "Récuperation d'un vecteur annexe à partir de son nom"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
        - in: query
          name: name
          description: le nom de la couche vecteur
          required: true
          schema:
            type: string
          example: Remarques
      responses:
        '200':
          description: OK
  
    post:
      tags:
        - vector
      summary: "Ajout d'un vecteur annexe en base"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
      requestBody:
        description: couche vecteur annexe à ajouter (json issu de itowns)
        required: true
        content:
          application/json:
              schema:
                type: object
                properties:
                  metadonnees:
                    type: object
                    properties:
                      name:
                        type: string
                        example: 'vector_example'
                      style:
                        type: object
                        example: {"fill": {"color": "#76cda7", "opacity": 0.7}, "icon": {}, "text": {}, "zoom": {}, "point": {}, "stroke": {"color": "#76cda7"}}
                      crs:
                        type: string
                        example: 'EPSG:2154'
                  data:
                    type: object
                    properties:
                      type:
                        type: string
                        enum:
                          - FeatureCollection
                      crs:
                        type: object
                        example:
                          {
                            "type":"name",
                            "properties":{
                              "name":"urn:ogc:def:crs:EPSG::2154"}}

                      features:
                        type: object
                        example:
                          [ { type: 'Feature', properties: { color: [254, 175, 143], cliche: '19FD5606Ax00020_16371' }, geometry: { type: 'Polygon', coordinates: [[[230748, 6759653], [230746, 6759653], [230746, 6759651], [230748, 6759651], [230748, 6759653]]] } } ]

      responses:
        '200':
          description: OK

  '/vector':
    get:
      tags:
        - vector
      summary: "Récupération d'un vecteur annexe donné à partir de son identifiant"
      description: ""
      parameters:
        - in: query
          name: idVector
          description: l'identifiant du vecteur
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

    delete:
      tags:
        - vector
      summary: "Destruction d'un vecteur donné"
      description: ""
      parameters:
        - in: query
          name: idVector
          description: l'identifiant du vecteur annexe à detruire
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

  '/{idRemarksVector}/feature':
    put:
      tags:
        - vector
      summary: "Ajout d'un ponctuel sur une couche 'Remarques'"
      description: "Ne permet d'ajouter un ponctuel que sur une couche 'Remarques'."
      parameters:
        - in: path
          name: idRemarksVector
          description: l'identifiant de la couche 'Remarques' à modifier
          required: true
          schema:
            type: integer
        - in: query
          name: x
          description: coordonnées x
          required: true
          schema:
            type: number
        - in: query
          name: y
          description: coordonnées y
          required: true
          schema:
            type: number
        - in: query
          name: comment
          description: commentaire
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK

    delete:
      tags:
        - vector
      summary: "Suppression d'un ponctuel sur une couche 'Remarques'"
      description: "Ne permet de supprimer un ponctuel que sur une couche 'Remarques'."
      parameters:
        - in: path
          name: idRemarksVector
          description: l'identifiant de la couche 'Remarques' à modifier
          required: true
          schema:
            type: integer
        - in: query
          name: id
          description: id de la feature à supprimer
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK

# Alerts
  '/vector/{idFeature}?status={status}':
    put:
      tags:
        - vector
      summary: "Modification de l'attribut 'status' d'une entité donnée"
      description: ""
      parameters:
        - in: path
          name: idFeature
          description: l'identifiant de la feature à modifier
          required: true
          schema:
            type: integer
        - in: path
          name: status
          description: nouvelle valeur
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: OK

  '/vector/{idFeature}?comment={comment}':
    put:
      tags:
        - vector
      summary: "Modification de l'attribut 'comment' d'une entité donnée"
      description: ""
      parameters:
        - in: path
          name: idFeature
          description: l'identifiant de la feature à modifier
          required: true
          schema:
            type: integer
        - in: path
          name: comment
          description: nouvelle valeur
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK

# WMTS
  '/{idBranch}/wmts':
    get:
      tags:
        - wmts
      summary: "service wmts pour ortho et graph"
      description: ""
      parameters:
        - in: path
          name: idBranch
          description: l'identifiant de la branche
          required: true
          schema:
            type: integer
        - in: query
          name: SERVICE
          required: true
          schema:
            type: string
            enum:
#              - WMS
              - WMTS
        - in: query
          name: REQUEST
          required: true
          description: ""
          schema:
            type: string
            enum:
              - GetCapabilities
              - GetTile
              - GetFeatureInfo
        - in: query
          name: VERSION
#          description: ex: 1.0.0
          required: true
          schema:
            type: string
#            pattern: '^\d+(.\d+)*$'
            enum:
              - 1.0.0
        - in: query
          name: LAYER
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: string
            enum:
              - ortho
              - graph
              - opi
            example: ortho
        - in: query
          name: Name
          description: dimension to use when LAYER='opi' (REQUEST=GetTile)
          required: false
          schema:
            type: string
            example: 19FD5606Ax00020_16371
        - in: query
          name: STYLE
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: string
            enum:
              - RVB
              - IRC
              - IR
              - normal
#              - default
            example: normal  # example of a parameter value
        - in: query
          name: FORMAT
          description: required if GetTile
          required: false
          schema:
            type: string
            enum:
              - image/png
              - image/jpeg
            example: image/png
        - in: query
          name: TILEMATRIXSET
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: string
            enum:
              - LAMB93_5cm
            example: LAMB93_5cm
        - in: query
          name: TILEMATRIX
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: string
            example: 21
        - in: query
          name: TILEROW
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: integer
            example: 409395
        - in: query
          name: TILECOL
          description: required if GetTile or GetFeatureInfo
          required: false
          schema:
            type: integer
            example: 18027
        - in: query
          name: I
          description: required if GetFeatureInfo
          required: false
          schema:
            type: integer
            example: 109
        - in: query
          name: J
          description: required if GetFeatureInfo
          required: false
          schema:
            type: integer
            example: 136
        - in: query
          name: INFOFORMAT
          description: required if GetFeatureInfo
          required: false
          schema:
            type: string
            example: application/gml+xml; version=3.1
  
      responses:
        '200':
          description: OK

# FILE
  '/json/{filetype}':
    get:
      tags:
        - file
      summary: "Récupération de fichier json"
      description: "Route permettant la récupération du fichier overviews.json"
      parameters:
        - in: path
          name: filetype
          required: true
          schema:
            type: string
            enum:
              - overviews
        - in: query
          name: cachePath
          required: true
          schema:
            type: string
          example: "cache_test"

      responses:
        '200':
          description: OK

# PROCESSES
  '/processes':
    get:
      tags:
        - process
      summary: "Récupération la liste des traitements longs"
      description: ""
      responses:
        '200':
          description: OK
  '/process/{id}':
    get:
      tags:
        - process
      summary: "Récupération de l'état d'un traitement long"
      description: ""
      parameters:
      - in: path
        name: id
        description: l'identifiant du traitement
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: OK

